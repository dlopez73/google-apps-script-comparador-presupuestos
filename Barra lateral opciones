<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <style>
    body { font-family: 'Roboto', sans-serif; margin: 0; padding: 15px; background-color: #f7f7f7; }
    .container { max-width: 300px; margin: auto; }
    h4 { color: #1e88e5; border-bottom: 2px solid #e0e0e0; padding-bottom: 5px; margin-top: 20px; }
    label { display: block; margin-top: 10px; font-weight: 500; font-size: 13px; color: #555; }
    select, textarea, input[type="text"] { width: 100%; padding: 8px; margin-top: 5px; box-sizing: border-box; border: 1px solid #ccc; border-radius: 4px; font-size: 13px; }
    button { background-color: #1e88e5; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; width: 100%; margin-top: 20px; font-weight: bold; }
    button:hover { background-color: #1565c0; }
    .loader { border: 4px solid #f3f3f3; border-top: 4px solid #1e88e5; border-radius: 50%; width: 20px; height: 20px; animation: spin 2s linear infinite; margin: 10px auto; display: none; }
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    .message { margin-top: 15px; padding: 10px; border-radius: 4px; font-size: 13px; text-align: center; }
    .success { background-color: #e8f5e9; color: #388e3c; border: 1px solid #c8e6c9; }
    .error { background-color: #ffebee; color: #d32f2f; border: 1px solid #ffcdd2; }
  </style>
</head>
<body>
<div class="container">
  <label for="obraSelect">1. Seleccionar Proyecto:</label>
  <select id="obraSelect" onchange="loadFiles(this.value)"></select>

  <h4>Archivos de Objeto (Ítems Generales)</h4>
  <label for="objetoViejoSelect">2. Versión Antigua:</label>
  <select id="objetoViejoSelect"></select>
  <label for="objetoNuevoSelect">3. Versión Nueva:</label>
  <select id="objetoNuevoSelect"></select>

  <h4>Archivos de Insumo (APUs)</h4>
  <label for="insumoViejoSelect">4. Versión Antigua:</label>
  <select id="insumoViejoSelect"></select>
  <label for="insumoNuevoSelect">5. Versión Nueva:</label>
  <select id="insumoNuevoSelect"></select>

  <h4>Archivos Resumidos</h4>
  <label for="resumidoViejoSelect">6. Versión Antigua:</label>
  <select id="resumidoViejoSelect"></select>
  <label for="resumidoNuevoSelect">7. Versión Nueva:</label>
  <select id="resumidoNuevoSelect"></select>

  <label for="causalSelect">8. Causal de Cambio:</label>
  <select id="causalSelect"></select>

  <label for="comentarioArea">9. Comentario (Opcional):</label>
  <textarea id="comentarioArea" rows="2"></textarea>

  <button onclick="runComparison()">Ejecutar Comparación</button>
  <div class="loader" id="loader"></div>
  <div class="message" id="message"></div>
</div>

<script>
  // Variables globales para almacenar los datos de archivos
  let currentFiles = { objetos: [], insumos: [], resumidos: [] };

  document.addEventListener('DOMContentLoaded', () => {
    google.script.run.withSuccessHandler(populateObras).obtenerNombresDeObras();
    google.script.run.withSuccessHandler(populateCausales).obtenerCausales();
  });

  function populateObras(nombres) {
    const select = document.getElementById('obraSelect');
    select.innerHTML = '<option value="" disabled selected>-- Seleccione un proyecto --</option>';
    nombres.forEach(nombre => {
      select.innerHTML += `<option value="${nombre}">${nombre}</option>`;
    });
  }

  function populateCausales(causales) {
    const select = document.getElementById('causalSelect');
    select.innerHTML = '';
    causales.forEach(causal => {
      select.innerHTML += `<option value="${causal}">${causal}</option>`;
    });
    if (causales.length === 0 || causales[0].startsWith('Error')) {
      select.innerHTML = '<option value="Sin Causal">No hay causales cargadas</option>';
    }
  }

  function loadFiles(nombreObra) {
    const selects = ['objetoViejoSelect', 'objetoNuevoSelect', 'insumoViejoSelect', 'insumoNuevoSelect', 'resumidoViejoSelect', 'resumidoNuevoSelect'];
    selects.forEach(id => {
      document.getElementById(id).innerHTML = '<option value="" disabled selected>Cargando...</option>';
    });
    google.script.run.withSuccessHandler(populateFiles).obtenerArchivosDeObra(nombreObra);
  }

  function populateFiles(archivos) {
    currentFiles = archivos;
    const selects = [
      { id: 'objetoViejoSelect', list: archivos.objetos },
      { id: 'objetoNuevoSelect', list: archivos.objetos },
      { id: 'insumoViejoSelect', list: archivos.insumos },
      { id: 'insumoNuevoSelect', list: archivos.insumos },
      { id: 'resumidoViejoSelect', list: archivos.resumidos },
      { id: 'resumidoNuevoSelect', list: archivos.resumidos }
    ];

    selects.forEach(({ id, list }) => {
      const select = document.getElementById(id);
      select.innerHTML = '<option value="" disabled selected>-- Seleccione archivo --</option>';
      if (list.length === 0) {
          select.innerHTML = '<option value="" disabled selected>No se encontraron archivos.</option>';
      } else {
        list.forEach(file => {
          select.innerHTML += `<option value="${file.id}">${file.name}</option>`;
        });
      }
    });
  }

  function runComparison() {
    const ids = {
      objetoViejo: document.getElementById('objetoViejoSelect').value,
      objetoNuevo: document.getElementById('objetoNuevoSelect').value,
      insumoViejo: document.getElementById('insumoViejoSelect').value,
      insumoNuevo: document.getElementById('insumoNuevoSelect').value,
      resumidoViejo: document.getElementById('resumidoViejoSelect').value,
      resumidoNuevo: document.getElementById('resumidoNuevoSelect').value,
    };
    const causal = document.getElementById('causalSelect').value;
    const comentario = document.getElementById('comentarioArea').value;

    if (!ids.objetoViejo || !ids.objetoNuevo || !ids.insumoViejo || !ids.insumoNuevo || !ids.resumidoViejo || !ids.resumidoNuevo) {
      showMessage('error', 'Error: Debe seleccionar los 6 archivos antes de ejecutar.');
      return;
    }

    const loader = document.getElementById('loader');
    const button = document.querySelector('button');
    const message = document.getElementById('message');

    loader.style.display = 'block';
    button.disabled = true;
    message.style.display = 'none';

    google.script.run
      .withSuccessHandler(handleSuccess)
      .withFailureHandler(handleFailure)
      .ejecutarComparacionDesdeUI(ids, causal, comentario);
  }

  function handleSuccess(reporte) {
    const loader = document.getElementById('loader');
    const button = document.querySelector('button');
    loader.style.display = 'none';
    button.disabled = false;

    if (reporte.error) {
      showMessage('error', `Error de Ejecución: ${reporte.error}`);
    } else {
      showMessage('success', `Proceso Finalizado. Objetos: ${reporte.objetos}. Insumos: ${reporte.insumos}. Resumidos: ${reporte.resumidos}.`);
    }
  }

  function handleFailure(error) {
    const loader = document.getElementById('loader');
    const button = document.querySelector('button');
    loader.style.display = 'none';
    button.disabled = false;
    showMessage('error', `Error Crítico: ${error.message}`);
  }
  
  function showMessage(type, text) {
      const message = document.getElementById('message');
      message.className = 'message ' + type;
      message.innerText = text;
      message.style.display = 'block';
  }
</script>
</body>
</html>
